from aiogram import Bot, executor, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove


from Config import TOKEN_API


#–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞            —Ä–∞–∑–º–µ—Ä                      —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã   
kb=ReplyKeyboardMarkup(resize_keyboard=True)  #, one_time_keyboard=True)
button1 = KeyboardButton('/help')
button2 = KeyboardButton('/description')
button3 = KeyboardButton('/give')
button4 = KeyboardButton('/photo')
kb.add(button1).insert(button2).add(button3).insert(button4)

HELP_COMMAND = """
/start
/help
/description
/give
<b>/photo</b> - <em>–ü–æ–ª—É—á–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É</em>
"""


bot = Bot(TOKEN_API)
dp = Dispatcher(bot)


async def on_startup(_):  # —Å–æ–æ–±—â–µ–µ–Ω–∏–µ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ –æ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
    print('–ë–æ—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω')


@dp.message_handler(commands=['start'])
async def start_command(message: types.message):
    # parse_mode = "HTML" –º–µ–Ω—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
    # <em> - –∫—É—Ä—Å–∏–≤
    # <b> - –∂–∏—Ä–Ω—ã–π
    # <>
    await message.answer("<em>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –¢–µ–ª–µ–≥—Ä–∞–º–º-–±–æ—Ç!</em>", 
                         parse_mode="HTML",
                         reply_markup=kb)
    await message.delete()


@dp.message_handler(commands=['help'])
async def help_command(message: types.message):
    await bot.send_message(chat_id=message.from_user.id,  # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –ª–∏—á–∫—É —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
                           text=HELP_COMMAND,
                           parse_mode="HTML")
                           #reply_markup=ReplyKeyboardRemove()) #—É–±–∏—Ä–∞–µ—Ç—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –∫–æ–º–∞–Ω–¥—ã
    await message.delete()


@dp.message_handler(commands=['description'])
async def start_command(message: types.message):
    await message.answer(text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ")
    await message.delete()


@dp.message_handler(commands=['give'])
async def sticker(message: types.message):
    await bot.send_sticker(message.from_user.id, sticker="CAACAgIAAxkBAAEH9xlkAAGVrbMY7hKFljiUpLrWWLAGM7YAAvcAA1advQoLciQdSPQNMC4E")


# @dp.message_handler()  # —ç—Ö–æ —Å —ç–º–æ–¥–∂–∏
# async def send_emoji(message: types.message):
#     await message.reply(message.text + 'ü§Ø ')


@dp.message_handler(commands=['photo'])
async def send_image(message: types.message):
    await bot.send_photo(chat_id=message.chat.id,
                         photo="https://yandex.ru/images/search?pos=8&from=tabbar&img_url=http%3A%2F%2Fpic.rutubelist.ru%2Fvideo%2F8a%2Feb%2F8aeb27d41a4d0dac9af3f2cf0a9b51a3.jpg&text=%D1%83%D1%82%D0%BA%D0%B8&rpt=simage&lr=119406")
    await message.delete()


@dp.message_handler(commands=['location'])
async def show_location(message: types.message):
    await bot.send_message(chat_id=message.from_user.id,
                           latitude=55,
                           longitude=65)
    await message.delete()


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True, on_startup=on_startup)
                                    # ‚Üë –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –±–æ—Ç –Ω–µ –±—ã–ª –∑–∞–ø—É—â–µ–Ω
